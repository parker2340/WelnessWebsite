// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WelnessWebsite.Data;

#nullable disable

namespace WelnessWebsite.Migrations
{
    [DbContext(typeof(WelnessWebsiteContext))]
    [Migration("20230707042020_modelNutritianChange")]
    partial class modelNutritianChange
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WelnessWebsite.Models.DailyNutrition", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<double>("Calories")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("WeeklyID")
                        .HasColumnType("int");

                    b.Property<int?>("WeeklyNutritionID")
                        .HasColumnType("int");

                    b.Property<double>("carbohydrates_total_g")
                        .HasColumnType("float");

                    b.Property<double>("cholesterol_mg")
                        .HasColumnType("float");

                    b.Property<double>("fat_saturated_g")
                        .HasColumnType("float");

                    b.Property<double>("fat_total_g")
                        .HasColumnType("float");

                    b.Property<double>("fiber_g")
                        .HasColumnType("float");

                    b.Property<double>("potassium_mg")
                        .HasColumnType("float");

                    b.Property<double>("protein_g")
                        .HasColumnType("float");

                    b.Property<double>("serving_size_g")
                        .HasColumnType("float");

                    b.Property<double>("sodium_mg")
                        .HasColumnType("float");

                    b.Property<double>("sugar_g")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("WeeklyNutritionID");

                    b.ToTable("DailyNutrition");
                });

            modelBuilder.Entity("WelnessWebsite.Models.DailyWorkout", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("WorkoutType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("DailyWorkout");
                });

            modelBuilder.Entity("WelnessWebsite.Models.Nutrition", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<double>("Calories")
                        .HasColumnType("float");

                    b.Property<int>("DailyNutritionID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("carbohydrates_total_g")
                        .HasColumnType("float");

                    b.Property<double>("cholesterol_mg")
                        .HasColumnType("float");

                    b.Property<double>("fat_saturated_g")
                        .HasColumnType("float");

                    b.Property<double>("fat_total_g")
                        .HasColumnType("float");

                    b.Property<double>("fiber_g")
                        .HasColumnType("float");

                    b.Property<double>("potassium_mg")
                        .HasColumnType("float");

                    b.Property<double>("protein_g")
                        .HasColumnType("float");

                    b.Property<double>("serving_size_g")
                        .HasColumnType("float");

                    b.Property<double>("sodium_mg")
                        .HasColumnType("float");

                    b.Property<double>("sugar_g")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("DailyNutritionID");

                    b.ToTable("Nutrition");
                });

            modelBuilder.Entity("WelnessWebsite.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WelnessWebsite.Models.WeeklyNutrition", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<double>("Calories")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("WeekNumber")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<double>("carbohydrates_total_g")
                        .HasColumnType("float");

                    b.Property<double>("cholesterol_mg")
                        .HasColumnType("float");

                    b.Property<double>("fat_saturated_g")
                        .HasColumnType("float");

                    b.Property<double>("fat_total_g")
                        .HasColumnType("float");

                    b.Property<double>("fiber_g")
                        .HasColumnType("float");

                    b.Property<double>("potassium_mg")
                        .HasColumnType("float");

                    b.Property<double>("protein_g")
                        .HasColumnType("float");

                    b.Property<double>("serving_size_g")
                        .HasColumnType("float");

                    b.Property<double>("sodium_mg")
                        .HasColumnType("float");

                    b.Property<double>("sugar_g")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("UserId");

                    b.ToTable("WeeklyNutrition");
                });

            modelBuilder.Entity("WelnessWebsite.Models.Workout", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("DailyWorkoutID")
                        .HasColumnType("int");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Muscle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DailyWorkoutID");

                    b.ToTable("Workout");
                });

            modelBuilder.Entity("WelnessWebsite.Models.DailyNutrition", b =>
                {
                    b.HasOne("WelnessWebsite.Models.WeeklyNutrition", null)
                        .WithMany("DailyNutritions")
                        .HasForeignKey("WeeklyNutritionID");
                });

            modelBuilder.Entity("WelnessWebsite.Models.DailyWorkout", b =>
                {
                    b.HasOne("WelnessWebsite.Models.User", null)
                        .WithMany("DailyWorkout")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WelnessWebsite.Models.Nutrition", b =>
                {
                    b.HasOne("WelnessWebsite.Models.DailyNutrition", null)
                        .WithMany("DailyNutritions")
                        .HasForeignKey("DailyNutritionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WelnessWebsite.Models.WeeklyNutrition", b =>
                {
                    b.HasOne("WelnessWebsite.Models.User", null)
                        .WithMany("WeeklyNutrition")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WelnessWebsite.Models.Workout", b =>
                {
                    b.HasOne("WelnessWebsite.Models.DailyWorkout", null)
                        .WithMany("Workout")
                        .HasForeignKey("DailyWorkoutID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WelnessWebsite.Models.DailyNutrition", b =>
                {
                    b.Navigation("DailyNutritions");
                });

            modelBuilder.Entity("WelnessWebsite.Models.DailyWorkout", b =>
                {
                    b.Navigation("Workout");
                });

            modelBuilder.Entity("WelnessWebsite.Models.User", b =>
                {
                    b.Navigation("DailyWorkout");

                    b.Navigation("WeeklyNutrition");
                });

            modelBuilder.Entity("WelnessWebsite.Models.WeeklyNutrition", b =>
                {
                    b.Navigation("DailyNutritions");
                });
#pragma warning restore 612, 618
        }
    }
}
