// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WelnessWebsite.Data;

#nullable disable

namespace WelnessWebsite.Migrations
{
    [DbContext(typeof(WelnessWebsiteContext))]
    partial class WelnessWebsiteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WelnessWebsite.Models.DailyNutrition", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<int>("Carbs")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Diber")
                        .HasColumnType("int");

                    b.Property<int>("Fat")
                        .HasColumnType("int");

                    b.Property<int>("Protein")
                        .HasColumnType("int");

                    b.Property<int>("WeeklyID")
                        .HasColumnType("int");

                    b.Property<int?>("WeeklyNutritionID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WeeklyNutritionID");

                    b.ToTable("DailyNutrition");
                });

            modelBuilder.Entity("WelnessWebsite.Models.DailyWorkout", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("DailyWorkout");
                });

            modelBuilder.Entity("WelnessWebsite.Models.User", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailConfirmed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WeeklyNutritionID")
                        .HasColumnType("int");

                    b.Property<int?>("WorkoutID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WeeklyNutritionID");

                    b.HasIndex("WorkoutID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("WelnessWebsite.Models.WeeklyNutrition", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Calories")
                        .HasColumnType("int");

                    b.Property<int>("Carbs")
                        .HasColumnType("int");

                    b.Property<int>("Fat")
                        .HasColumnType("int");

                    b.Property<int>("Fiber")
                        .HasColumnType("int");

                    b.Property<int>("Protein")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("WeeklyNutrition");
                });

            modelBuilder.Entity("WelnessWebsite.Models.Workout", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("DailyWorkoutID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("dificulty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("muscle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DailyWorkoutID");

                    b.ToTable("Workout");
                });

            modelBuilder.Entity("WelnessWebsite.Models.DailyNutrition", b =>
                {
                    b.HasOne("WelnessWebsite.Models.WeeklyNutrition", null)
                        .WithMany("DailyNutritions")
                        .HasForeignKey("WeeklyNutritionID");
                });

            modelBuilder.Entity("WelnessWebsite.Models.User", b =>
                {
                    b.HasOne("WelnessWebsite.Models.WeeklyNutrition", "WeeklyNutrition")
                        .WithMany()
                        .HasForeignKey("WeeklyNutritionID");

                    b.HasOne("WelnessWebsite.Models.DailyWorkout", "Workout")
                        .WithMany()
                        .HasForeignKey("WorkoutID");

                    b.Navigation("WeeklyNutrition");

                    b.Navigation("Workout");
                });

            modelBuilder.Entity("WelnessWebsite.Models.Workout", b =>
                {
                    b.HasOne("WelnessWebsite.Models.DailyWorkout", null)
                        .WithMany("WorkoutList")
                        .HasForeignKey("DailyWorkoutID");
                });

            modelBuilder.Entity("WelnessWebsite.Models.DailyWorkout", b =>
                {
                    b.Navigation("WorkoutList");
                });

            modelBuilder.Entity("WelnessWebsite.Models.WeeklyNutrition", b =>
                {
                    b.Navigation("DailyNutritions");
                });
#pragma warning restore 612, 618
        }
    }
}
